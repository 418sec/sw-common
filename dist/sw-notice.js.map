{"version":3,"sources":["webpack:///./src/sw.ts"],"names":["badge","image","icon","superalogs","tag","cal","confirm","self","addEventListener","e","console","log","waitUntil","Promise","resolve","setTimeout","then","clients","claim","request","url","respondWith","fetch","activeWorker","skipWaiting","src","source","matchAll","includeUncontrolled","client","visibilityState","body","actions","action","title","registration","showNotification","renotify","requireInteraction","timestamp","Date","now","no","notification","onclick","onerror","onshow","onclose","close","promise","type","cl","focus"],"mappings":"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","file":"sw-notice.js","sourcesContent":["const badge = '/images/badge.png';\r\nconst image = '/images/markets-original.jpg';\r\nconst icon = '/images/superalgos-logov2.png';\r\nconst superalogs = '/images/superalgos-logov2.png';\r\nconst tag = 'some-id-0123';\r\nconst cal = '/images/icon-cal.png';\r\nconst confirm = '/images/icon-confirm.png';\r\n//self.importScripts('/script1.js');\r\nself.addEventListener('activate', e => {\r\n    console.log(`%c activate event received`, 'color:green');\r\n    e.waitUntil(new Promise(resolve => {\r\n        setTimeout(() => {\r\n            console.log(`%c activate event finished`, 'color:green');\r\n            resolve();\r\n        }, 5000);\r\n    }).then(() => self.clients.claim()));\r\n});\r\nself.addEventListener('fetch', e => {\r\n    console.log(`%c fetching url: ${e.request.url}`, 'color:green');\r\n    e.respondWith(fetch(e.request));\r\n});\r\nself.addEventListener('install', e => {\r\n    const { activeWorker } = e;\r\n    console.log(`%c install event received`, 'color:green');\r\n    self.skipWaiting();\r\n    e.waitUntil(new Promise(resolve => {\r\n        setTimeout(() => {\r\n            console.log(`%c install event finished`, 'color:green');\r\n            resolve();\r\n        }, 5000);\r\n    }));\r\n});\r\nself.addEventListener('message', (e) => {\r\n    console.log(`%c message event received`, 'color:green', e);\r\n    // we are a service worker so this is either a Channel or a WindowClient\r\n    const src = e.source;\r\n    self.clients.matchAll({ includeUncontrolled: true }).then((clients) => {\r\n        // do something with your clients list\r\n        console.log(\"CLIENTS>>>>\", clients);\r\n        for (const client of clients) {\r\n            if (client.visibilityState === 'visible') {\r\n                // only allowed after you click on \"notification\", no permission here\r\n                // you will get\r\n                // code: 15\r\n                // message: \"Not allowed to focus a window.\"\r\n                // name: \"InvalidAccessError\"\r\n                // \"Not allowed to focus a window.\"\r\n                /*client.focus()\r\n                .then(wc => {\r\n                    console.log(wc.id);\r\n                })\r\n                .catch(err => {\r\n                    console.log('oops something went wrong', err);\r\n                });*/\r\n            }\r\n        }\r\n    });\r\n    // showNotifcation do it here\r\n    const body = 'this is the  body of the text';\r\n    const actions = [{ action: 'confirm-1', title: 'WHAT the fuck', icon: confirm }];\r\n    e.waitUntil(self.registration.showNotification(\"Shiny\", { actions, tag, badge, body, icon, image, renotify: false, requireInteraction: true, timestamp: Date.now() + 24 * 3600 * 1000 }));\r\n});\r\nself.addEventListener('messageerror', e => {\r\n    console.log(`%c messageerror event received`, 'color:red');\r\n});\r\nself.addEventListener('notificationclick', e => {\r\n    const no = e.notification;\r\n    no.onclick;\r\n    no.onerror;\r\n    no.onshow;\r\n    // doesnt work here\r\n    no.onclose = () => console.log('notification is closing??');\r\n    no.close();\r\n    const promise = self.clients.matchAll({ type: 'window' })\r\n        .then(clients => {\r\n        const cl = clients;\r\n        for (const client of cl) {\r\n            if (client.visibilityState === 'visible') {\r\n                return client.focus();\r\n                break;\r\n            }\r\n        }\r\n        return cl[0].focus();\r\n    });\r\n    e.waitUntil(promise);\r\n    console.log(`%c notificationclick event received`, 'color:green', e);\r\n});\r\nself.addEventListener('notificationclose', e => {\r\n    const no = e.notification;\r\n    no.close();\r\n    console.log(`%c notificationclose event received`, 'color:green');\r\n});\r\nself.addEventListener('push', e => {\r\n    console.log(`%c push event received`, 'color:green');\r\n});\r\nself.addEventListener('pushsubscriptionchange', e => {\r\n    console.log(`%c pushsubscriptionchange event received`, 'color:green');\r\n});\r\nself.addEventListener('sync', e => {\r\n    console.log(`%c sync event received`, 'color:green');\r\n});\r\nself.addEventListener('error', e => {\r\n    console.log(`%c error event received`, 'color:red');\r\n});\r\n"],"sourceRoot":""}